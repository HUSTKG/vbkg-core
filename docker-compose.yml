version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: knowledge-graph-api
    container_name: knowledge-graph-api
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - neo4j
    env_file:
      - .env
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    networks:
      - kg-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: knowledge-graph-frontend
    container_name: knowledge-graph-frontend
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/apps/console/.env.local
    depends_on:
      - api
    networks:
      - kg-network

  neo4j:
    image: neo4j:5.7-community
    container_name: knowledge-graph-neo4j
    restart: always
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-conf:/conf
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
    networks:
      - kg-network

  redis:
    image: redis:7-alpine
    container_name: knowledge-graph-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - kg-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: knowledge-graph-worker
    container_name: knowledge-graph-worker
    restart: always
    depends_on:
      - redis
      - neo4j
    env_file:
      - .env
    command: celery -A app.tasks.worker worker -l info
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    networks:
      - kg-network

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    image: knowledge-graph-flower
    container_name: knowledge-graph-flower
    restart: always
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - worker
    env_file:
      - .env
    command: celery -A app.tasks.worker flower --port=5555
    networks:
      - kg-network

networks:
  kg-network:
    driver: bridge

volumes:
  neo4j-data:
  neo4j-logs:
  neo4j-conf:
  redis-data:
